name: language-comparison

services:
#  zookeeper:
#    image: docker.io/bitnami/zookeeper:3.9
#    ports:
#      - '2181:2181'
#    volumes:
#      - 'zookeeper_data:/bitnami/zookeeper'
#    environment:
#      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    restart: on-failure
    image: bitnami/kafka:3.9.0
    hostname: kafka
    ports:
      - 19092:19092
    volumes:
      - "kafka_data:/bitnami"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:19092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:19092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT

  console:
    image: docker.redpanda.com/redpandadata/console:v2.3.8
    restart: on-failure
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["kafka:19092"]
    ports:
      - 8080:8080
    depends_on:
      - kafka

  elasticsearch:
    image: elasticsearch:8.8.0
    restart: on-failure
    environment:
      ELASTIC_PASSWORD: password
      discovery.type: single-node
      cluster.name: elasticsearch
      xpack.security.enabled: true
      xpack.security.autoconfiguration.enabled: true
      cluster.routing.allocation.disk.watermark.low: 95%
      cluster.routing.allocation.disk.watermark.high: 98%
      cluster.routing.allocation.disk.watermark.flood_stage: 98%
    #      ingest.geoip.downloader.enabled: false
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9600:9600

  kibana:
    image: kibana:8.8.0
    restart: on-failure
    volumes:
#      - certs:/usr/share/kibana/config/certs
      - kibana_data:/usr/share/kibana/data
      - ./kibana.yml:/usr/share/kibana/config/kibana.yml
    environment:
      - SERVERNAME=kibana
      - ELASTICSEARCH_HOSTS=https://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=password
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch

  prometheus:
    image: prom/prometheus:v2.47.0
    container_name: prometheus
    restart: on-failure
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090
  grafana:
    image: grafana/grafana:11.5.2
    container_name: grafana
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  elasticsearch_data:
    driver: local
  kibana_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
